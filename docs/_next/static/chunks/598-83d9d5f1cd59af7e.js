"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[598],{1703:(o,t,r)=>{r.d(t,{i:()=>e});var e=function(o){return o[o.WOOD=0]="WOOD",o[o.WOOL=1]="WOOL",o[o.WHEAT=2]="WHEAT",o[o.BRICK=3]="BRICK",o[o.ORE=4]="ORE",o[o.GENERAL_DEAL=5]="GENERAL_DEAL",o}({})},4598:(o,t,r)=>{r.d(t,{A:()=>g});var e=r(1776),m=r(7820),s=r(1703),a=function(o){return o[o.WHITE=0]="WHITE",o[o.BLUE=1]="BLUE",o[o.RED=2]="RED",o[o.ORANGE=3]="ORANGE",o[o.SETTLEMENT=4]="SETTLEMENT",o[o.AREA=5]="AREA",o}({}),i=r(2328);function f(o){for(let m=0;m<o.length;m++){let s=(0,i.O)(o);var t=o,r=m,e=s;let a=t[r];t[r]=t[e],t[e]=a}}let l={join:(o,t,r,e)=>{o[t].edges.set(r,{offset:r,vertex:o[r],color:e})}},n=JSON.parse('[{"from":0,"to":19},{"from":19,"to":0},{"from":0,"to":22},{"from":22,"to":0},{"from":0,"to":23},{"from":23,"to":0},{"from":0,"to":26},{"from":26,"to":0},{"from":0,"to":27},{"from":27,"to":0},{"from":0,"to":31},{"from":31,"to":0},{"from":1,"to":20},{"from":20,"to":1},{"from":1,"to":23},{"from":23,"to":1},{"from":1,"to":24},{"from":24,"to":1},{"from":1,"to":27},{"from":27,"to":1},{"from":1,"to":28},{"from":28,"to":1},{"from":1,"to":32},{"from":32,"to":1},{"from":2,"to":21},{"from":21,"to":2},{"from":2,"to":24},{"from":24,"to":2},{"from":2,"to":25},{"from":25,"to":2},{"from":2,"to":28},{"from":28,"to":2},{"from":2,"to":29},{"from":29,"to":2},{"from":2,"to":33},{"from":33,"to":2},{"from":3,"to":26},{"from":26,"to":3},{"from":3,"to":30},{"from":30,"to":3},{"from":3,"to":31},{"from":31,"to":3},{"from":3,"to":35},{"from":35,"to":3},{"from":3,"to":36},{"from":36,"to":3},{"from":3,"to":41},{"from":41,"to":3},{"from":4,"to":27},{"from":27,"to":4},{"from":4,"to":31},{"from":31,"to":4},{"from":4,"to":32},{"from":32,"to":4},{"from":4,"to":36},{"from":36,"to":4},{"from":4,"to":37},{"from":37,"to":4},{"from":4,"to":42},{"from":42,"to":4},{"from":5,"to":28},{"from":28,"to":5},{"from":5,"to":32},{"from":32,"to":5},{"from":5,"to":33},{"from":33,"to":5},{"from":5,"to":37},{"from":37,"to":5},{"from":5,"to":38},{"from":38,"to":5},{"from":5,"to":43},{"from":43,"to":5},{"from":6,"to":29},{"from":29,"to":6},{"from":6,"to":33},{"from":33,"to":6},{"from":6,"to":34},{"from":34,"to":6},{"from":6,"to":38},{"from":38,"to":6},{"from":6,"to":39},{"from":39,"to":6},{"from":6,"to":44},{"from":44,"to":6},{"from":7,"to":35},{"from":35,"to":7},{"from":7,"to":40},{"from":40,"to":7},{"from":7,"to":41},{"from":41,"to":7},{"from":7,"to":46},{"from":46,"to":7},{"from":7,"to":47},{"from":47,"to":7},{"from":7,"to":52},{"from":52,"to":7},{"from":8,"to":36},{"from":36,"to":8},{"from":8,"to":41},{"from":41,"to":8},{"from":8,"to":42},{"from":42,"to":8},{"from":8,"to":47},{"from":47,"to":8},{"from":8,"to":48},{"from":48,"to":8},{"from":8,"to":53},{"from":53,"to":8},{"from":9,"to":37},{"from":37,"to":9},{"from":9,"to":42},{"from":42,"to":9},{"from":9,"to":43},{"from":43,"to":9},{"from":9,"to":48},{"from":48,"to":9},{"from":9,"to":49},{"from":49,"to":9},{"from":9,"to":54},{"from":54,"to":9},{"from":10,"to":38},{"from":38,"to":10},{"from":10,"to":43},{"from":43,"to":10},{"from":10,"to":44},{"from":44,"to":10},{"from":10,"to":49},{"from":49,"to":10},{"from":10,"to":50},{"from":50,"to":10},{"from":10,"to":55},{"from":55,"to":10},{"from":11,"to":39},{"from":39,"to":11},{"from":11,"to":44},{"from":44,"to":11},{"from":11,"to":45},{"from":45,"to":11},{"from":11,"to":50},{"from":50,"to":11},{"from":11,"to":51},{"from":51,"to":11},{"from":11,"to":56},{"from":56,"to":11},{"from":12,"to":47},{"from":47,"to":12},{"from":12,"to":52},{"from":52,"to":12},{"from":12,"to":53},{"from":53,"to":12},{"from":12,"to":57},{"from":57,"to":12},{"from":12,"to":58},{"from":58,"to":12},{"from":12,"to":62},{"from":62,"to":12},{"from":13,"to":48},{"from":48,"to":13},{"from":13,"to":53},{"from":53,"to":13},{"from":13,"to":54},{"from":54,"to":13},{"from":13,"to":58},{"from":58,"to":13},{"from":13,"to":59},{"from":59,"to":13},{"from":13,"to":63},{"from":63,"to":13},{"from":14,"to":49},{"from":49,"to":14},{"from":14,"to":54},{"from":54,"to":14},{"from":14,"to":55},{"from":55,"to":14},{"from":14,"to":59},{"from":59,"to":14},{"from":14,"to":60},{"from":60,"to":14},{"from":14,"to":64},{"from":64,"to":14},{"from":15,"to":50},{"from":50,"to":15},{"from":15,"to":55},{"from":55,"to":15},{"from":15,"to":56},{"from":56,"to":15},{"from":15,"to":60},{"from":60,"to":15},{"from":15,"to":61},{"from":61,"to":15},{"from":15,"to":65},{"from":65,"to":15},{"from":16,"to":58},{"from":58,"to":16},{"from":16,"to":62},{"from":62,"to":16},{"from":16,"to":63},{"from":63,"to":16},{"from":16,"to":66},{"from":66,"to":16},{"from":16,"to":67},{"from":67,"to":16},{"from":16,"to":70},{"from":70,"to":16},{"from":17,"to":59},{"from":59,"to":17},{"from":17,"to":63},{"from":63,"to":17},{"from":17,"to":64},{"from":64,"to":17},{"from":17,"to":67},{"from":67,"to":17},{"from":17,"to":68},{"from":68,"to":17},{"from":17,"to":71},{"from":71,"to":17},{"from":18,"to":60},{"from":60,"to":18},{"from":18,"to":64},{"from":64,"to":18},{"from":18,"to":65},{"from":65,"to":18},{"from":18,"to":68},{"from":68,"to":18},{"from":18,"to":69},{"from":69,"to":18},{"from":18,"to":72},{"from":72,"to":18}]'),d=JSON.parse('[{"from":19,"to":22},{"from":19,"to":23},{"from":20,"to":23},{"from":20,"to":24},{"from":21,"to":24},{"from":21,"to":25},{"from":22,"to":19},{"from":22,"to":26},{"from":23,"to":20},{"from":23,"to":27},{"from":23,"to":19},{"from":24,"to":21},{"from":24,"to":28},{"from":24,"to":20},{"from":25,"to":21},{"from":25,"to":29},{"from":26,"to":22},{"from":26,"to":30},{"from":26,"to":31},{"from":27,"to":23},{"from":27,"to":31},{"from":27,"to":32},{"from":28,"to":24},{"from":28,"to":32},{"from":28,"to":33},{"from":29,"to":25},{"from":29,"to":33},{"from":29,"to":34},{"from":30,"to":26},{"from":30,"to":35},{"from":31,"to":27},{"from":31,"to":36},{"from":31,"to":26},{"from":32,"to":28},{"from":32,"to":37},{"from":32,"to":27},{"from":33,"to":29},{"from":33,"to":38},{"from":33,"to":28},{"from":34,"to":29},{"from":34,"to":39},{"from":35,"to":30},{"from":35,"to":40},{"from":35,"to":41},{"from":36,"to":31},{"from":36,"to":41},{"from":36,"to":42},{"from":37,"to":32},{"from":37,"to":42},{"from":37,"to":43},{"from":38,"to":33},{"from":38,"to":43},{"from":38,"to":44},{"from":39,"to":34},{"from":39,"to":44},{"from":39,"to":45},{"from":40,"to":35},{"from":40,"to":46},{"from":41,"to":36},{"from":41,"to":47},{"from":41,"to":35},{"from":42,"to":37},{"from":42,"to":48},{"from":42,"to":36},{"from":43,"to":38},{"from":43,"to":49},{"from":43,"to":37},{"from":44,"to":39},{"from":44,"to":50},{"from":44,"to":38},{"from":45,"to":39},{"from":45,"to":51},{"from":46,"to":40},{"from":46,"to":52},{"from":47,"to":41},{"from":47,"to":52},{"from":47,"to":53},{"from":48,"to":42},{"from":48,"to":53},{"from":48,"to":54},{"from":49,"to":43},{"from":49,"to":54},{"from":49,"to":55},{"from":50,"to":44},{"from":50,"to":55},{"from":50,"to":56},{"from":51,"to":45},{"from":51,"to":56},{"from":52,"to":46},{"from":52,"to":57},{"from":52,"to":47},{"from":53,"to":47},{"from":53,"to":58},{"from":53,"to":48},{"from":54,"to":48},{"from":54,"to":59},{"from":54,"to":49},{"from":55,"to":49},{"from":55,"to":60},{"from":55,"to":50},{"from":56,"to":50},{"from":56,"to":61},{"from":56,"to":51},{"from":57,"to":52},{"from":57,"to":62},{"from":58,"to":53},{"from":58,"to":62},{"from":58,"to":63},{"from":59,"to":54},{"from":59,"to":63},{"from":59,"to":64},{"from":60,"to":55},{"from":60,"to":64},{"from":60,"to":65},{"from":61,"to":56},{"from":61,"to":65},{"from":62,"to":57},{"from":62,"to":66},{"from":62,"to":58},{"from":63,"to":58},{"from":63,"to":67},{"from":63,"to":59},{"from":64,"to":59},{"from":64,"to":68},{"from":64,"to":60},{"from":65,"to":60},{"from":65,"to":69},{"from":65,"to":61},{"from":66,"to":62},{"from":66,"to":70},{"from":67,"to":63},{"from":67,"to":70},{"from":67,"to":71},{"from":68,"to":64},{"from":68,"to":71},{"from":68,"to":72},{"from":69,"to":65},{"from":69,"to":72},{"from":70,"to":66},{"from":70,"to":67},{"from":71,"to":67},{"from":71,"to":68},{"from":72,"to":68},{"from":72,"to":69}]'),c=JSON.parse("[0,3,1,5,10,15,26,32,42,46,49,52,47,51,33,38,11,16]");var h=r(7492),u=r(3174);class v{get victoryPoints(){let o=this.game.json_achivements(),t=o.largestArmy===this.id,r=o.longestRoad===this.id;return this.settlements.size+this.cities.size+(+t+ +r)*2}get realVictoryPoints(){return this.victoryPoints+this.devcards[1]}constructor(o,t,r,e){this.id=o,this.name=t,this.socket=r,this.game=e,this.victory=0,this.materials=[...h],this.devcards=[...u],this.settlements=new Set,this.roads=new Set,this.cities=new Set,this.sevenNeedToGive=!1,this.amounts={city:4,road:15,settlement:5},this.knightUsed=0,this.maxRoad=0,this.twoRoadsState=!1}}var A=r(4258),E=r(9333),p=r(1616);class y{get add(){return this.set.add.bind(this.set)}pop(){if(0===this.set.size)return;let o=Array.from(this.set.values()).sort(this.compareFn),t=o.pop();return this.set=new Set(o),t}constructor(o,t){this.compareFn=t,this.set=new Set(o)}}class T{prepareCatanEdges(){for(let[o,t]of[[n,a.AREA],[d,a.SETTLEMENT]])for(let{from:r,to:e}of o)l.join(this.vertecies,r,e,t)}prepareCatanLands(){let o=[s.i.WOOD,s.i.WOOD,s.i.WOOD,s.i.WOOD,s.i.WOOL,s.i.WOOL,s.i.WOOL,s.i.WOOL,s.i.WHEAT,s.i.WHEAT,s.i.WHEAT,s.i.WHEAT,s.i.BRICK,s.i.BRICK,s.i.BRICK,s.i.ORE,s.i.ORE,s.i.ORE],t=[2,3,3,4,4,5,5,6,6,8,8,9,9,10,10,11,11,12];f(o),f(t);for(let r=0;r<m.xS-1;r++){let e=r>=9;this.vertecies[r+ +e].material={material:o.shift(),num:t.shift()}}this.vertecies[9].material={material:5,num:7}}prepareCatanHarbors(){f(this.harborsMats);for(let o=0;o<this.harborsMats.length;o++)this.vertecies[c[2*o]+m.xS].harbor=this.vertecies[c[2*o+1]+m.xS].harbor=this.harborsMats[o]}get playerCount(){return this.players.length}playerJoin(o,t){let r=this.availableIds.pop();if(void 0===r)return null;console.log("server.playerJoin.id.pop",r);let e=new v(r,o,t,this);return this.players.push(e),e}disconnect(o){try{console.log("server.catan.disconnect before",this.players);let{id:t}=o;console.log("server.catan.disconnect id",t),this.availableIds.add(t),this.players=this.players.filter(o=>o.id!==t),console.log("server.catan.disconnect after",this.players)}catch(o){console.error("server.catan.disconnect error",o)}}json(){let{robberArea:o,bank:t}=this;return{harbors:this.harborsMats,materials:this.vertecies.filter(o=>void 0!==o.material).map((o,t)=>[t,o.material]),robberArea:o,bank:t}}json_achivements(){let{longestRoadColor:o,largestArmyColor:t}=this;return{longestRoad:o,largestArmy:t}}playersAroundArea(o){let t=Array(this.players.length).fill(!1);return this.vertecies[o].edges.forEach(o=>{let{vertex:r}=o;r.color<m.iq&&(t[+r.color]=!0)}),t}act_rollDice(){let o=[(0,A.XU)(1,6),(0,A.XU)(1,6)],t=o[0]+o[1],r=this.vertecies.filter((o,r)=>{let{material:e}=o;return r<m.xS&&(null==e?void 0:e.num)===t&&this.robberArea!==r}).flatMap(o=>{let{material:t,edges:r}=o,{material:e}=t,m=[];return r.forEach(o=>{let{offset:t,vertex:r}=o;r.color!==a.AREA&&m.push({color:r.color,vertex:t,mat:e})}),m}).filter(o=>{let{color:t}=o;return t<m.iq}),e=7==t?[]:this.players.map(o=>{let{id:t,cities:e}=o,s=[0,0,0,0,0],a=[];return r.forEach(o=>{let{mat:r,color:s,vertex:i}=o;s===t&&(e.has(i-m.xS)&&a.push(r),a.push(r))}),(0,E.A)(s).countpicks(a),{from:t,mats:s}});return 7==t&&this.players.forEach(o=>o.sevenNeedToGive=!0),{dices:o,addons:e}}act_stopTurn(){return this.turnId=(this.turnId+1)%this.players.length}act_buyRoad(o,t,r){var e,m;let s=!(arguments.length>3)||void 0===arguments[3]||arguments[3];if(o.roads.has([t,r])||(null==(m=this.vertecies[t])||null==(e=m.edges.get(r))?void 0:e.color)!==a.SETTLEMENT||o.amounts.road<=0||s&&!(0,E.A)(o.materials).available(p.road))return!1;s&&(0,E.A)(this.bank.materials).sameSize.add(p.road),s&&(0,E.A)(o.materials).sameSize.sub(p.road);let i=(o,t,r)=>{this.vertecies[o].edges.get(t).color=r};return i(t,r,o.id),i(r,t,o.id),o.roads.add([t,r]),o.amounts.road--,!0}act_buySettlement(o,t){return!o.settlements.has(t)&&this.vertecies[t+m.xS].color===a.SETTLEMENT&&!(o.amounts.settlement<=0)&&!!(0,E.A)(o.materials).available(p.settlement)&&((0,E.A)(this.bank.materials).sameSize.add(p.settlement),(0,E.A)(o.materials).sameSize.sub(p.settlement),this.vertecies[t+m.xS].color=o.id,o.settlements.add(t),o.amounts.settlement--,!0)}act_buyCity(o,t){return!(!o.settlements.has(t)||o.cities.has(t))&&!(o.amounts.city<=0)&&!!(0,E.A)(o.materials).available(p.city)&&((0,E.A)(this.bank.materials).sameSize.add(p.city),(0,E.A)(o.materials).sameSize.sub(p.city),o.cities.add(t),o.amounts.city--,!0)}act_buyDevcard(o){let t=function(o){let t=(0,E.A)(o).sum();if(0===t)return -1;let r=(0,A.XU)(0,t-1),e=0;for(;e<o.length;){if(r<o[e])return e;r-=o[e],e++}return -1}(this.bank.devcards);return -1!==t&&!!(0,E.A)(o.materials).available(p.devcard)&&((0,E.A)(this.bank.materials).sameSize.add(p.devcard),(0,E.A)(o.materials).sameSize.sub(p.devcard),this.bank.devcards[t]--,o.devcards[t]++,t)}act_moveRobber(o,t,r){return(!r||!(o.devcards[0]<=0))&&(o.devcards[0]-=r,o.knightUsed+=+r,this.robberArea=t,!0)}dropMaterials(o,t){return!!(0,E.A)(o.materials).available(t)&&!!o.sevenNeedToGive&&((0,E.A)(o.materials).sameSize.sub(t),(0,E.A)(this.bank.materials).sameSize.add(t),o.sevenNeedToGive=!1,!0)}dev_yearOfPlenty(o,t){return!(o.devcards[3]<=0)&&!!(0,E.A)(this.bank.materials).available(t)&&(o.devcards[3]--,(0,E.A)(this.bank.materials).sameSize.sub(t),(0,E.A)(o.materials).sameSize.add(t),!0)}dev_monopol(o,t){if(o.devcards[4]<=0)return!1;for(let r of(o.devcards[4]--,this.players)){if(r.id===o.id)continue;let e=[...r.materials],m=e[t];e[t]=0,r.materials=e,o.materials[t]+=m}return!0}dev_road(o,t,r){return!(o.devcards[2]<=0)&&(o.devcards[2]-=o.twoRoadsState,o.twoRoadsState=!o.twoRoadsState,this.act_buyRoad(o,t,r,!1),!0)}updateLongestRoad(){let o=this.longestRoadColor,t=(o,r,e)=>{let s=this.vertecies[o];if(!this.vertecies[o]||s.color==a.AREA||e[o-m.xS])return 0;e[o-m.xS]=!0;let i=0;return s.edges.forEach(o=>{o.color===r&&(i=Math.max(i,t(o.offset,r,e)))}),i+1},r=o=>{let r=0;for(let e=0;e<m.XH;e++){let s=Array(m.XH).fill(!1);r=Math.max(r,t(e+m.xS,o,s)-1)}return r},e=this.players.map(o=>o.maxRoad=r(o.id)),s=(0,E.A)(e).max();return!((0,E.A)(e).counts(s)>1)&&(s<5?(this.longestRoadColor=-1,!1):(this.longestRoadColor=(0,E.A)(e).maxIndex(),o!==this.longestRoadColor))}updateLargestArmy(){let o=this.largestArmyColor,t=this.players.map(o=>o.knightUsed),r=(0,E.A)(t).max();return!((0,E.A)(t).counts(r)>1)&&(r<3?(this.largestArmyColor=-1,!1):(this.largestArmyColor=(0,E.A)(t).maxIndex(),o!==this.largestArmyColor))}checkWin(){let o=this.players.map(o=>o.realVictoryPoints);if(console.log("server.vps",o),10>(0,E.A)(o).max())return!1;let t=(0,E.A)(o).maxIndex();return this.players[t].id}calculateTrades(o){let t=new Set(Array.from(o.settlements.values()).filter(o=>void 0!==this.vertecies[o+m.xS].harbor).map(o=>this.vertecies[o+m.xS].harbor)),r=[];for(let e=0;e<5;e++){let m=[t.has(e)&&o.materials[e]>1,2];for(let[s,a]of[m,[t.has(5)&&o.materials[e]>2,3],[o.materials[e]>3,4]])s&&r.push({from:e,count:a})}return r}applyTrade(o,t,r,e){let s=!0;if(e<4){let r=new Set(Array.from(o.settlements.values()).filter(o=>void 0!==this.vertecies[o+m.xS].harbor).map(o=>this.vertecies[o+m.xS].harbor));switch(e){case 3:s=r.has(5);break;case 2:s=r.has(t);break;default:return!1}}if(!s)return!1;let a=[0,0,0,0,0];a[t]=e;let i=[0,0,0,0,0];return i[r]=1,!!(0,E.A)(o.materials).available(a)&&!!(0,E.A)(this.bank.materials).available(i)&&((0,E.A)(this.bank.materials).sameSize.add(a),(0,E.A)(o.materials).sameSize.sub(a),(0,E.A)(this.bank.materials).sameSize.sub(i),(0,E.A)(o.materials).sameSize.add(i),!0)}constructor(){this.longestRoadColor=-1,this.largestArmyColor=-1,this.vertecies=Array(m.xS+m.XH).fill(void 0).map((o,t)=>({color:t<m.xS?a.AREA:a.SETTLEMENT,edges:new Map})),this.bank={devcards:[14,5,2,2,2],materials:[19,19,19,19,19]},this.availableIds=new y([0,1,2,3],(o,t)=>t-o),this.turnId=0,this.robberArea=9,this.players=[],this.harborsMats=[s.i.WOOD,s.i.WOOL,s.i.WHEAT,s.i.BRICK,s.i.ORE,s.i.GENERAL_DEAL,s.i.GENERAL_DEAL,s.i.GENERAL_DEAL,s.i.GENERAL_DEAL],this.prepareCatanEdges(),this.prepareCatanLands(),this.prepareCatanHarbors()}}var S=r(8482);class R{join(o){this.clients.add(o),this.readies.set(o,!1)}toggleReady(o){var t;let r=null!=(t=this.readies.get(o))&&t;return this.readies.set(o,!r),this.ready=Array.from(this.readies.values()).every(o=>!0===o),!r}has(o){return this.clients.has(o)}disconnect(o){console.log("server.lobby.disconnect"),this.readies.delete(o),this.clients.delete(o)}get sockets(){return{emit:(o,t)=>{this.clients.forEach(r=>r.emit(o,t))},emitExcept:(o,t,r)=>{this.clients.forEach(e=>e!==o&&e.emit(t,r))}}}get size(){return this.clients.size}constructor(){this.ready=!1,this.readies=new Map,this.clients=new Set}}let b=[0,0,0,0,0];function g(o){let t=new T,r=new R;new S.g(t=>{null==o||o(t)},(o,m)=>{let s=null;o.middleware(()=>{let o=t.checkWin();if(!1!==o){let m=t.players.map(o=>{let{id:t,devcards:r,victoryPoints:e}=o;return{id:t,vp:e,vpdc:r[1]}});console.log("winner.server"),r.sockets.emit(e.Q.WIN,{id:o,players:m})}}),o.on(e.a.INIT,m=>r.ready?(o.emit(e.Q.STATUS,2),o.disconnect()):null===(s=t.playerJoin(m,o))?(o.emit(e.Q.STATUS,t.playerCount<4?0:1),o.disconnect()):void(r.join(o),console.log("disconnect.server.init.size",t.players.length),o.emit(e.Q.INIT,{...t.json(),id:s.id,onlines:t.players.filter(o=>o.id!==s.id).map(o=>{let{id:t,materials:r,devcards:e,name:m}=o;return{id:t,name:m,materials:(0,E.A)(r).sum(),devcards:(0,E.A)(e).sum()}})}),console.log("local.name",s.name),r.sockets.emitExcept(o,e.Q.PLAYER_JOIN,{id:s.id,name:s.name,materials:(0,E.A)(s.materials).sum(),devcards:(0,E.A)(s.devcards).sum()}))),o.on(e.a.ROLL,()=>{r.sockets.emit(e.Q.TURN_DICE,t.act_rollDice())}),o.on(e.a.MESSAGE,o=>{r.sockets.emit(e.Q.MESSAGE,{from:s.id,date:new Date().getTime(),message:o})}),o.on(e.a.STOP_TURN,()=>{r.sockets.emit(e.Q.TURN_SWITCH,t.act_stopTurn())}),o.on(e.a.READY,()=>{r.sockets.emit(e.Q.READY,[s.id,r.toggleReady(o)]),r.ready&&r.sockets.emit(e.Q.START_GAME)});let a=function(o){let m=arguments.length>1&&void 0!==arguments[1]?arguments[1]:s;m.socket.emit(e.Q.PLAYER_UPDATE,{...o,vp:m.victoryPoints,materials:m.materials}),r.sockets.emit(e.Q.BANK_UPDATE,t.bank),r.sockets.emitExcept(m.socket,e.Q.OTHER_UPDATE,{id:m.id,materials:(0,E.A)(m.materials).sum(),devcards:(0,E.A)(m.devcards).sum(),vp:m.victoryPoints,...o.roads?{roads:Array.from(m.roads.values())}:{},...o.cities?{cities:Array.from(m.cities.values())}:{},...o.settlements?{settlements:Array.from(m.settlements.values())}:{},...void 0===o.maxRoad?{}:{maxRoad:o.maxRoad},...void 0===o.knightUsed?{}:{knightUsed:o.knightUsed}})},i=()=>{r.sockets.emit(e.Q.ACHIVEMENTS_UPDATE,t.json_achivements())};o.on(e.a.DROP_MATS,o=>{console.log("server ServerCodes.DROP_MATS before",o,"from local",s.id,s.materials,s.sevenNeedToGive);let r=t.dropMaterials(s,o);console.log("server ServerCodes.DROP_MATS after",o,"from local",s.id,s.materials,s.sevenNeedToGive,r),r&&a({})}),o.on(e.a.BUY_ROAD,o=>{let[r,e]=o;console.log("server","buy_road","input",[r,e]),t.act_buyRoad(s,Math.min(r,e),Math.max(r,e))&&(t.updateLongestRoad()&&i(),a({amounts:s.amounts,roads:Array.from(s.roads.values()),maxRoad:s.maxRoad}))}),o.on(e.a.BUY_CITY,o=>{t.act_buyCity(s,o)&&a({amounts:s.amounts,cities:Array.from(s.cities.values())})}),o.on(e.a.BUY_SETTLEMENT,o=>{t.act_buySettlement(s,o)&&a({amounts:s.amounts,settlements:Array.from(s.settlements.values())})}),o.on(e.a.BUY_DEVCARD,()=>{let r=t.act_buyDevcard(s);if(!1!==r){a({devcards:s.devcards});let t=[0,0,0,0,0];t[r]++,o.emit(e.Q.MATS_NOTIFICATION,[b,t])}}),o.on(e.a.MOVE_ROBBER,o=>{let{areaOffset:m,useDevcard:f}=o;t.act_moveRobber(s,m,f)&&(f&&(t.updateLargestArmy()&&i(),a({devcards:s.devcards,knightUsed:s.knightUsed})),r.sockets.emit(e.Q.MOVE_ROBBER,m))}),o.on(e.a.DEV_YEAROFPLENTY,r=>{t.dev_yearOfPlenty(s,r)&&(a({devcards:s.devcards}),o.emit(e.Q.MATS_NOTIFICATION,[r,b]))}),o.on(e.a.DEV_MONOPOL,m=>{let i=s.materials[m];if(t.dev_monopol(s,m)){let f=s.materials[m];console.log("server.dev_monopol local",s.materials,s.materials[m]),a({devcards:s.devcards}),t.players.forEach(o=>{a({},o)}),r.sockets.emit(e.Q.DEV_MONOPOL,{from:s.id,mat:m});let l=[0,0,0,0,0];l[m]=f-i,o.emit(e.Q.MATS_NOTIFICATION,[l,b])}}),o.on(e.a.DEV_ROADS,o=>{let[r,e]=o;t.dev_road(s,r,e)&&(t.updateLongestRoad()&&i(),a({amounts:s.amounts,roads:Array.from(s.roads.values()),maxRoad:s.maxRoad,devcards:s.devcards}))}),o.on(e.a.REQUEST_TRADES,()=>{let r=t.calculateTrades(s);o.emit(e.Q.GET_TRADES,r)}),o.on(e.a.APPLY_TRADE,r=>{let{from:m,to:i,count:f}=r;if(t.applyTrade(s,m,i,f)){a({});let t=[0,0,0,0,0];t[i]=1,o.emit(e.Q.MATS_NOTIFICATION,[t,b])}}),o.on("disconnect",()=>{r.has(o)&&(r.ready?(r.sockets.emitExcept(o,e.Q.STOP),m.stop()):(console.log("server.socket.disconnect"),r.sockets.emitExcept(o,e.Q.DISCONNECTED,s.id),r.disconnect(o),s&&t.disconnect(s),r.size<=0&&m.stop()))})})}},7820:(o,t,r)=>{r.d(t,{XH:()=>m,iq:()=>s,xS:()=>e});let e=19,m=54,s=4}}]);